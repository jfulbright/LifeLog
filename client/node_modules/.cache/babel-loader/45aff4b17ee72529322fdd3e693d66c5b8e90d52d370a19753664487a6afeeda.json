{"ast":null,"code":"var _jsxFileName = \"/Users/jfulbright/bootcamp/Projects/LifeLog/client/src/features/concerts/components/ConcertForm.js\";\nimport React from \"react\";\nimport ItemForm from \"components/shared/ItemForm\";\nimport concertSchema from \"features/concerts/concertSchema\";\nimport { fetchSetlists } from \"features/concerts/api/concertApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConcertForm({\n  formData,\n  setFormData,\n  onSubmit\n}) {\n  const handleLookup = async () => {\n    try {\n      var _formData$date;\n      const data = await fetchSetlists(formData.artist, (_formData$date = formData.date) === null || _formData$date === void 0 ? void 0 : _formData$date.split(\"-\")[0]);\n      console.log(data); // Optional: prefill formData with first result\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ItemForm, {\n    schema: concertSchema,\n    formData: formData,\n    setFormData: setFormData,\n    onSubmit: onSubmit,\n    onLookup: handleLookup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = ConcertForm;\nexport default ConcertForm;\nvar _c;\n$RefreshReg$(_c, \"ConcertForm\");","map":{"version":3,"names":["React","ItemForm","concertSchema","fetchSetlists","jsxDEV","_jsxDEV","ConcertForm","formData","setFormData","onSubmit","handleLookup","_formData$date","data","artist","date","split","console","log","err","error","schema","onLookup","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jfulbright/bootcamp/Projects/LifeLog/client/src/features/concerts/components/ConcertForm.js"],"sourcesContent":["import React from \"react\";\nimport ItemForm from \"components/shared/ItemForm\";\nimport concertSchema from \"features/concerts/concertSchema\";\nimport { fetchSetlists } from \"features/concerts/api/concertApi\";\n\nfunction ConcertForm({ formData, setFormData, onSubmit }) {\n  const handleLookup = async () => {\n    try {\n      const data = await fetchSetlists(\n        formData.artist,\n        formData.date?.split(\"-\")[0]\n      );\n      console.log(data); // Optional: prefill formData with first result\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <ItemForm\n      schema={concertSchema}\n      formData={formData}\n      setFormData={setFormData}\n      onSubmit={onSubmit}\n      onLookup={handleLookup}\n    />\n  );\n}\n\nexport default ConcertForm;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,SAASC,aAAa,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,WAAWA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAS,CAAC,EAAE;EACxD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MAAA,IAAAC,cAAA;MACF,MAAMC,IAAI,GAAG,MAAMT,aAAa,CAC9BI,QAAQ,CAACM,MAAM,GAAAF,cAAA,GACfJ,QAAQ,CAACO,IAAI,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAC7B,CAAC;MACDC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEb,OAAA,CAACJ,QAAQ;IACPmB,MAAM,EAAElB,aAAc;IACtBK,QAAQ,EAAEA,QAAS;IACnBC,WAAW,EAAEA,WAAY;IACzBC,QAAQ,EAAEA,QAAS;IACnBY,QAAQ,EAAEX;EAAa;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN;AAACC,EAAA,GAtBQpB,WAAW;AAwBpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}