{"ast":null,"code":"// client/src/features/travel/travelSchema.js\n\nimport { baseSchema } from \"helpers/common.schema\";\nimport { locationSchema } from \"helpers/location.schema\";\nimport { getStatusValues } from \"helpers/statusLabels\";\n\n// Remove baseSchema's status field and replace it with a scoped one for travel\nconst travelSchema = [\n// Use status options specific to travel (e.g. \"visited\", \"wishlist\")\n// These values and labels are defined in helpers/statusLabels.js\n\n{\n  name: \"status\",\n  label: \"Status\",\n  type: \"select\",\n  options: getStatusValues(\"travel\"),\n  // [\"visited\", \"wishlist\"]\n  section: \"Main\",\n  order: 0\n}, {\n  name: \"title\",\n  label: \"Trip Title\",\n  type: \"text\",\n  optional: true,\n  section: \"Main\",\n  order: 0\n}, {\n  name: \"rating\",\n  label: \"Rating (1–10)\",\n  type: \"number\",\n  optional: true,\n  visibleWhen: {\n    status: \"visited\"\n  },\n  section: \"Review\",\n  order: 1\n}, {\n  name: \"targetMonth\",\n  label: \"Target Month\",\n  type: \"text\",\n  optional: true,\n  visibleWhen: {\n    status: \"wishlist\"\n  },\n  section: \"Planning\",\n  order: 2\n}, {\n  name: \"targetYear\",\n  label: \"Target Year\",\n  type: \"number\",\n  optional: true,\n  visibleWhen: {\n    status: \"wishlist\"\n  },\n  section: \"Planning\",\n  order: 3\n},\n// Add location fields under \"Location\" section\n...locationSchema.map((field, i) => ({\n  ...field,\n  section: \"Location\",\n  order: 10 + i\n})),\n// Include all shared fields except the default status field\n...baseSchema.filter(field => field.name !== \"status\")];\nexport default travelSchema;","map":{"version":3,"names":["baseSchema","locationSchema","getStatusValues","travelSchema","name","label","type","options","section","order","optional","visibleWhen","status","map","field","i","filter"],"sources":["/Users/jfulbright/bootcamp/Projects/LifeLog/client/src/features/travel/travelSchema.js"],"sourcesContent":["// client/src/features/travel/travelSchema.js\n\nimport { baseSchema } from \"helpers/common.schema\";\nimport { locationSchema } from \"helpers/location.schema\";\nimport { getStatusValues } from \"helpers/statusLabels\";\n\n// Remove baseSchema's status field and replace it with a scoped one for travel\nconst travelSchema = [\n\n  // Use status options specific to travel (e.g. \"visited\", \"wishlist\")\n  // These values and labels are defined in helpers/statusLabels.js\n\n  {\n    name: \"status\",\n    label: \"Status\",\n    type: \"select\",\n    options: getStatusValues(\"travel\"), // [\"visited\", \"wishlist\"]\n    section: \"Main\",\n    order: 0,\n  },\n\n  {\n    name: \"title\",\n    label: \"Trip Title\",\n    type: \"text\",\n    optional: true,\n    section: \"Main\",\n    order: 0,\n  },\n  \n\n  {\n    name: \"rating\",\n    label: \"Rating (1–10)\",\n    type: \"number\",\n    optional: true,\n    visibleWhen: { status: \"visited\" },\n    section: \"Review\",\n    order: 1,\n  },\n  {\n    name: \"targetMonth\",\n    label: \"Target Month\",\n    type: \"text\",\n    optional: true,\n    visibleWhen: { status: \"wishlist\" },\n    section: \"Planning\",\n    order: 2,\n  },\n  {\n    name: \"targetYear\",\n    label: \"Target Year\",\n    type: \"number\",\n    optional: true,\n    visibleWhen: { status: \"wishlist\" },\n    section: \"Planning\",\n    order: 3,\n  },\n\n  // Add location fields under \"Location\" section\n  ...locationSchema.map((field, i) => ({\n    ...field,\n    section: \"Location\",\n    order: 10 + i,\n  })),\n\n  // Include all shared fields except the default status field\n  ...baseSchema.filter((field) => field.name !== \"status\"),\n];\n\nexport default travelSchema;\n"],"mappings":"AAAA;;AAEA,SAASA,UAAU,QAAQ,uBAAuB;AAClD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,sBAAsB;;AAEtD;AACA,MAAMC,YAAY,GAAG;AAEnB;AACA;;AAEA;EACEC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAEL,eAAe,CAAC,QAAQ,CAAC;EAAE;EACpCM,OAAO,EAAE,MAAM;EACfC,KAAK,EAAE;AACT,CAAC,EAED;EACEL,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,YAAY;EACnBC,IAAI,EAAE,MAAM;EACZI,QAAQ,EAAE,IAAI;EACdF,OAAO,EAAE,MAAM;EACfC,KAAK,EAAE;AACT,CAAC,EAGD;EACEL,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,eAAe;EACtBC,IAAI,EAAE,QAAQ;EACdI,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAU,CAAC;EAClCJ,OAAO,EAAE,QAAQ;EACjBC,KAAK,EAAE;AACT,CAAC,EACD;EACEL,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,cAAc;EACrBC,IAAI,EAAE,MAAM;EACZI,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAW,CAAC;EACnCJ,OAAO,EAAE,UAAU;EACnBC,KAAK,EAAE;AACT,CAAC,EACD;EACEL,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,aAAa;EACpBC,IAAI,EAAE,QAAQ;EACdI,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAW,CAAC;EACnCJ,OAAO,EAAE,UAAU;EACnBC,KAAK,EAAE;AACT,CAAC;AAED;AACA,GAAGR,cAAc,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,MAAM;EACnC,GAAGD,KAAK;EACRN,OAAO,EAAE,UAAU;EACnBC,KAAK,EAAE,EAAE,GAAGM;AACd,CAAC,CAAC,CAAC;AAEH;AACA,GAAGf,UAAU,CAACgB,MAAM,CAAEF,KAAK,IAAKA,KAAK,CAACV,IAAI,KAAK,QAAQ,CAAC,CACzD;AAED,eAAeD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}