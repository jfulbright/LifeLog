{"ast":null,"code":"// client/src/features/travel/travelSchema.js\n\nimport { baseSchema } from \"helpers/common.schema\";\nimport { locationSchema } from \"helpers/location.schema\";\nimport { getStatusValues } from \"helpers/statusLabels\";\nconst travelSchema = [...baseSchema,\n// provides status, notes, tags, etc.\n\n{\n  name: \"rating\",\n  label: \"Rating (1–10)\",\n  type: \"number\",\n  optional: true,\n  visibleWhen: {\n    status: \"visited\"\n  },\n  // lowercase for consistency\n  section: \"Review\",\n  order: 1\n}, {\n  name: \"targetMonth\",\n  label: \"Target Month\",\n  type: \"text\",\n  optional: true,\n  visibleWhen: {\n    status: \"wishlist\"\n  },\n  section: \"Planning\",\n  order: 2\n}, {\n  name: \"targetYear\",\n  label: \"Target Year\",\n  type: \"number\",\n  optional: true,\n  visibleWhen: {\n    status: \"wishlist\"\n  },\n  section: \"Planning\",\n  order: 3\n}, ...locationSchema.map((field, i) => ({\n  ...field,\n  section: \"Location\",\n  order: 10 + i\n}))];\nexport default travelSchema;","map":{"version":3,"names":["baseSchema","locationSchema","getStatusValues","travelSchema","name","label","type","optional","visibleWhen","status","section","order","map","field","i"],"sources":["/Users/jfulbright/bootcamp/Projects/LifeLog/client/src/features/travel/travelSchema.js"],"sourcesContent":["// client/src/features/travel/travelSchema.js\n\nimport { baseSchema } from \"helpers/common.schema\";\nimport { locationSchema } from \"helpers/location.schema\";\nimport { getStatusValues } from \"helpers/statusLabels\";\n\nconst travelSchema = [\n  ...baseSchema, // provides status, notes, tags, etc.\n\n  {\n    name: \"rating\",\n    label: \"Rating (1–10)\",\n    type: \"number\",\n    optional: true,\n    visibleWhen: { status: \"visited\" }, // lowercase for consistency\n    section: \"Review\",\n    order: 1,\n  },\n  {\n    name: \"targetMonth\",\n    label: \"Target Month\",\n    type: \"text\",\n    optional: true,\n    visibleWhen: { status: \"wishlist\" },\n    section: \"Planning\",\n    order: 2,\n  },\n  {\n    name: \"targetYear\",\n    label: \"Target Year\",\n    type: \"number\",\n    optional: true,\n    visibleWhen: { status: \"wishlist\" },\n    section: \"Planning\",\n    order: 3,\n  },\n\n  ...locationSchema.map((field, i) => ({\n    ...field,\n    section: \"Location\",\n    order: 10 + i,\n  })),\n];\n\nexport default travelSchema;\n"],"mappings":"AAAA;;AAEA,SAASA,UAAU,QAAQ,uBAAuB;AAClD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,sBAAsB;AAEtD,MAAMC,YAAY,GAAG,CACnB,GAAGH,UAAU;AAAE;;AAEf;EACEI,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,eAAe;EACtBC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAU,CAAC;EAAE;EACpCC,OAAO,EAAE,QAAQ;EACjBC,KAAK,EAAE;AACT,CAAC,EACD;EACEP,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,cAAc;EACrBC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAW,CAAC;EACnCC,OAAO,EAAE,UAAU;EACnBC,KAAK,EAAE;AACT,CAAC,EACD;EACEP,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,aAAa;EACpBC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAW,CAAC;EACnCC,OAAO,EAAE,UAAU;EACnBC,KAAK,EAAE;AACT,CAAC,EAED,GAAGV,cAAc,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,MAAM;EACnC,GAAGD,KAAK;EACRH,OAAO,EAAE,UAAU;EACnBC,KAAK,EAAE,EAAE,GAAGG;AACd,CAAC,CAAC,CAAC,CACJ;AAED,eAAeX,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}