{"ast":null,"code":"// client/src/features/homes/homeSchema.js\n\nimport { baseSchema } from \"helpers/common.schema\";\nimport { locationSchema } from \"helpers/location.schema\";\nimport { getStatusValues } from \"helpers/statusLabels\";\nconst homeSchema = [\n// Use status options specific to homes (e.g. \"owned\", \"rented\", \"wishlist\")\n// These values and labels are defined in helpers/statusLabels.js\n{\n  name: \"status\",\n  label: \"Status\",\n  type: \"select\",\n  options: getStatusValues(\"homes\"),\n  section: \"Main\",\n  order: 0\n}, {\n  name: \"type\",\n  label: \"Home Type\",\n  type: \"select\",\n  options: [\"House\", \"Condo\", \"Townhouse\", \"Apartment\", \"Other\"],\n  section: \"Main\",\n  order: 1\n},\n// RENTERS\n{\n  name: \"monthlyRent\",\n  label: \"Monthly Rent\",\n  type: \"number\",\n  isCurrency: true,\n  optional: true,\n  visibleWhen: {\n    status: \"rented\"\n  },\n  section: \"Rent Info\",\n  order: 2\n},\n// OWNERS\n{\n  name: \"purchaseDate\",\n  label: \"Purchase Date\",\n  type: \"date\",\n  visibleWhen: {\n    status: \"owned\"\n  },\n  section: \"Ownership Info\",\n  order: 3\n}, {\n  name: \"purchasePrice\",\n  label: \"Purchase Price\",\n  type: \"number\",\n  isCurrency: true,\n  visibleWhen: {\n    status: \"owned\"\n  },\n  section: \"Ownership Info\",\n  order: 4\n}, {\n  name: \"soldDate\",\n  label: \"Sold Date\",\n  type: \"date\",\n  optional: true,\n  visibleWhen: {\n    status: \"owned\"\n  },\n  section: \"Ownership Info\",\n  order: 5\n}, {\n  name: \"soldPrice\",\n  label: \"Sold Price\",\n  type: \"number\",\n  isCurrency: true,\n  optional: true,\n  visibleWhen: {\n    status: \"owned\"\n  },\n  section: \"Ownership Info\",\n  order: 6\n}, {\n  name: \"yearsLived\",\n  label: \"Years Lived\",\n  type: \"number\",\n  optional: true,\n  section: \"Details\",\n  order: 7\n}, {\n  name: \"sqft\",\n  label: \"Square Feet\",\n  type: \"number\",\n  optional: true,\n  section: \"Details\",\n  order: 8\n}, {\n  name: \"bedrooms\",\n  label: \"Bedrooms\",\n  type: \"number\",\n  optional: true,\n  section: \"Details\",\n  order: 9\n}, {\n  name: \"bathrooms\",\n  label: \"Bathrooms\",\n  type: \"number\",\n  optional: true,\n  section: \"Details\",\n  order: 10\n},\n// Location fields (grouped under Location section)\n...locationSchema.map((field, i) => ({\n  ...field,\n  section: \"Location\",\n  order: 20 + i\n})),\n// Shared fields (e.g., notes, tags, createdDate), minus base status\n...baseSchema.filter(field => field.name !== \"status\")];\nexport default homeSchema;","map":{"version":3,"names":["baseSchema","locationSchema","getStatusValues","homeSchema","name","label","type","options","section","order","isCurrency","optional","visibleWhen","status","map","field","i","filter"],"sources":["/Users/jfulbright/bootcamp/Projects/LifeLog/client/src/features/homes/homeSchema.js"],"sourcesContent":["// client/src/features/homes/homeSchema.js\n\nimport { baseSchema } from \"helpers/common.schema\";\nimport { locationSchema } from \"helpers/location.schema\";\nimport { getStatusValues } from \"helpers/statusLabels\";\n\nconst homeSchema = [\n  // Use status options specific to homes (e.g. \"owned\", \"rented\", \"wishlist\")\n  // These values and labels are defined in helpers/statusLabels.js\n  {\n    name: \"status\",\n    label: \"Status\",\n    type: \"select\",\n    options: getStatusValues(\"homes\"),\n    section: \"Main\",\n    order: 0,\n  },\n\n  {\n    name: \"type\",\n    label: \"Home Type\",\n    type: \"select\",\n    options: [\"House\", \"Condo\", \"Townhouse\", \"Apartment\", \"Other\"],\n    section: \"Main\",\n    order: 1,\n  },\n\n  // RENTERS\n  {\n    name: \"monthlyRent\",\n    label: \"Monthly Rent\",\n    type: \"number\",\n    isCurrency: true,\n    optional: true,\n    visibleWhen: { status: \"rented\" },\n    section: \"Rent Info\",\n    order: 2,\n  },\n\n  // OWNERS\n  {\n    name: \"purchaseDate\",\n    label: \"Purchase Date\",\n    type: \"date\",\n    visibleWhen: { status: \"owned\" },\n    section: \"Ownership Info\",\n    order: 3,\n  },\n  {\n    name: \"purchasePrice\",\n    label: \"Purchase Price\",\n    type: \"number\",\n    isCurrency: true,\n    visibleWhen: { status: \"owned\" },\n    section: \"Ownership Info\",\n    order: 4,\n  },\n  {\n    name: \"soldDate\",\n    label: \"Sold Date\",\n    type: \"date\",\n    optional: true,\n    visibleWhen: { status: \"owned\" },\n    section: \"Ownership Info\",\n    order: 5,\n  },\n  {\n    name: \"soldPrice\",\n    label: \"Sold Price\",\n    type: \"number\",\n    isCurrency: true,\n    optional: true,\n    visibleWhen: { status: \"owned\" },\n    section: \"Ownership Info\",\n    order: 6,\n  },\n\n  {\n    name: \"yearsLived\",\n    label: \"Years Lived\",\n    type: \"number\",\n    optional: true,\n    section: \"Details\",\n    order: 7,\n  },\n  {\n    name: \"sqft\",\n    label: \"Square Feet\",\n    type: \"number\",\n    optional: true,\n    section: \"Details\",\n    order: 8,\n  },\n  {\n    name: \"bedrooms\",\n    label: \"Bedrooms\",\n    type: \"number\",\n    optional: true,\n    section: \"Details\",\n    order: 9,\n  },\n  {\n    name: \"bathrooms\",\n    label: \"Bathrooms\",\n    type: \"number\",\n    optional: true,\n    section: \"Details\",\n    order: 10,\n  },\n\n  // Location fields (grouped under Location section)\n  ...locationSchema.map((field, i) => ({\n    ...field,\n    section: \"Location\",\n    order: 20 + i,\n  })),\n\n  // Shared fields (e.g., notes, tags, createdDate), minus base status\n  ...baseSchema.filter((field) => field.name !== \"status\"),\n];\n\nexport default homeSchema;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}