{"ast":null,"code":"var _jsxFileName = \"/Users/jfulbright/bootcamp/Projects/LifeLog/client/src/components/shared/ItemForm.js\";\nimport React from \"react\";\nimport { Form, Button, Card, Row, Col } from \"react-bootstrap\";\nimport { formatCurrency, handleInputChange, isFieldVisible } from \"helpers/operator\";\n\n/**\n * A shared, reusable form component that dynamically renders fields\n * based on a schema definition.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemForm({\n  schema,\n  formData,\n  setFormData,\n  onSubmit,\n  title = \"Add Entry\",\n  buttonText = \"Add\"\n}) {\n  const isReadOnly = !setFormData;\n\n  // Render a single field from the schema\n  const renderField = field => {\n    if (!isFieldVisible(field, formData)) return null;\n    const value = formData[field.name] || \"\";\n    if (isReadOnly && field.isLink && value) {\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: value,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"text-primary text-decoration-underline\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, field.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n    const commonProps = {\n      name: field.name,\n      value: formData[field.name] || \"\",\n      onChange: e => handleInputChange(e, setFormData)\n    };\n    if (field.type === \"select\") {\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          ...commonProps,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), field.options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: opt\n          }, opt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, field.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    }\n    if (field.type === \"textarea\") {\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 2,\n          ...commonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, field.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: field.isCurrency ? \"text\" : field.type,\n        ...commonProps,\n        value: field.isCurrency ? formatCurrency(formData[field.name] || \"\") : formData[field.name] || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, field.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: schema.map((field, index) => /*#__PURE__*/_jsxDEV(Col, {\n            md: field.fullWidth ? 12 : 6,\n            children: renderField(field)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), !isReadOnly && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_c = ItemForm;\nexport default ItemForm;\nvar _c;\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"names":["React","Form","Button","Card","Row","Col","formatCurrency","handleInputChange","isFieldVisible","jsxDEV","_jsxDEV","ItemForm","schema","formData","setFormData","onSubmit","title","buttonText","isReadOnly","renderField","field","value","name","isLink","Group","className","children","Label","label","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","commonProps","onChange","e","type","Select","options","map","opt","Control","as","rows","isCurrency","Body","Title","index","md","fullWidth","variant","_c","$RefreshReg$"],"sources":["/Users/jfulbright/bootcamp/Projects/LifeLog/client/src/components/shared/ItemForm.js"],"sourcesContent":["import React from \"react\";\nimport { Form, Button, Card, Row, Col } from \"react-bootstrap\";\nimport {\n  formatCurrency,\n  handleInputChange,\n  isFieldVisible,\n} from \"helpers/operator\";\n\n/**\n * A shared, reusable form component that dynamically renders fields\n * based on a schema definition.\n */\nfunction ItemForm({\n  schema,\n  formData,\n  setFormData,\n  onSubmit,\n  title = \"Add Entry\",\n  buttonText = \"Add\",\n}) {\n  const isReadOnly = !setFormData;\n\n  // Render a single field from the schema\n  const renderField = (field) => {\n    if (!isFieldVisible(field, formData)) return null;\n    const value = formData[field.name] || \"\";\n\n    if (isReadOnly && field.isLink && value) {\n      return (\n        <Form.Group key={field.name} className=\"mb-3\">\n          <Form.Label>{field.label}</Form.Label>\n          <div>\n            <a\n              href={value}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-primary text-decoration-underline\"\n            >\n              {value}\n            </a>\n          </div>\n        </Form.Group>\n      );\n    }\n\n    const commonProps = {\n      name: field.name,\n      value: formData[field.name] || \"\",\n      onChange: (e) => handleInputChange(e, setFormData),\n    };\n\n    if (field.type === \"select\") {\n      return (\n        <Form.Group key={field.name} className=\"mb-3\">\n          <Form.Label>{field.label}</Form.Label>\n          <Form.Select {...commonProps}>\n            <option value=\"\">Select</option>\n            {field.options.map((opt) => (\n              <option key={opt} value={opt}>\n                {opt}\n              </option>\n            ))}\n          </Form.Select>\n        </Form.Group>\n      );\n    }\n\n    if (field.type === \"textarea\") {\n      return (\n        <Form.Group key={field.name} className=\"mb-3\">\n          <Form.Label>{field.label}</Form.Label>\n          <Form.Control as=\"textarea\" rows={2} {...commonProps} />\n        </Form.Group>\n      );\n    }\n\n    return (\n      <Form.Group key={field.name} className=\"mb-3\">\n        <Form.Label>{field.label}</Form.Label>\n        <Form.Control\n          type={field.isCurrency ? \"text\" : field.type}\n          {...commonProps}\n          value={\n            field.isCurrency\n              ? formatCurrency(formData[field.name] || \"\")\n              : formData[field.name] || \"\"\n          }\n        />\n      </Form.Group>\n    );\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Form onSubmit={onSubmit}>\n          <Row>\n            {schema.map((field, index) => (\n              <Col md={field.fullWidth ? 12 : 6} key={index}>\n                {renderField(field)}\n              </Col>\n            ))}\n          </Row>\n          {!isReadOnly && (\n            <Button variant=\"primary\" type=\"submit\">\n              {buttonText}\n            </Button>\n          )}\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ItemForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}