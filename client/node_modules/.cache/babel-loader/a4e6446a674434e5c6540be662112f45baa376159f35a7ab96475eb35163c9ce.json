{"ast":null,"code":"const apiKey = process.env.REACT_APP_SETLISTFM_API_KEY;\nexport async function fetchSetlists(artist, year) {\n  var _json$setlist;\n  const url = `https://api.setlist.fm/rest/1.0/search/setlists?artistName=${encodeURIComponent(artist)}&year=${year}`;\n  const response = await fetch(url, {\n    headers: {\n      \"x-api-key\": apiKey,\n      Accept: \"application/json\"\n    }\n  });\n  if (!response.ok) throw new Error(\"Failed to fetch setlists\");\n  const json = await response.json();\n  return ((_json$setlist = json.setlist) === null || _json$setlist === void 0 ? void 0 : _json$setlist.map(item => {\n    var _item$artist, _item$venue, _item$venue2, _item$venue2$city, _item$venue3, _item$venue3$city, _item$venue3$city$cou, _item$tour, _item$sets, _item$sets$set, _item$sets$set$, _item$sets$set$$song, _item$artist2;\n    return {\n      artist: (_item$artist = item.artist) === null || _item$artist === void 0 ? void 0 : _item$artist.name,\n      date: item.eventDate,\n      // will need conversion to ISO\n      venue: (_item$venue = item.venue) === null || _item$venue === void 0 ? void 0 : _item$venue.name,\n      location: `${(_item$venue2 = item.venue) === null || _item$venue2 === void 0 ? void 0 : (_item$venue2$city = _item$venue2.city) === null || _item$venue2$city === void 0 ? void 0 : _item$venue2$city.name}, ${(_item$venue3 = item.venue) === null || _item$venue3 === void 0 ? void 0 : (_item$venue3$city = _item$venue3.city) === null || _item$venue3$city === void 0 ? void 0 : (_item$venue3$city$cou = _item$venue3$city.country) === null || _item$venue3$city$cou === void 0 ? void 0 : _item$venue3$city$cou.code}`,\n      tour: ((_item$tour = item.tour) === null || _item$tour === void 0 ? void 0 : _item$tour.name) || \"\",\n      setlist: ((_item$sets = item.sets) === null || _item$sets === void 0 ? void 0 : (_item$sets$set = _item$sets.set) === null || _item$sets$set === void 0 ? void 0 : (_item$sets$set$ = _item$sets$set[0]) === null || _item$sets$set$ === void 0 ? void 0 : (_item$sets$set$$song = _item$sets$set$.song) === null || _item$sets$set$$song === void 0 ? void 0 : _item$sets$set$$song.map(song => song.name)) || [],\n      sourceUrl: `https://www.setlist.fm/setlist/${(_item$artist2 = item.artist) === null || _item$artist2 === void 0 ? void 0 : _item$artist2.name}/${item.id}`,\n      type: \"concert\",\n      status: \"visited\"\n    };\n  })) || [];\n}","map":{"version":3,"names":["apiKey","process","env","REACT_APP_SETLISTFM_API_KEY","fetchSetlists","artist","year","_json$setlist","url","encodeURIComponent","response","fetch","headers","Accept","ok","Error","json","setlist","map","item","_item$artist","_item$venue","_item$venue2","_item$venue2$city","_item$venue3","_item$venue3$city","_item$venue3$city$cou","_item$tour","_item$sets","_item$sets$set","_item$sets$set$","_item$sets$set$$song","_item$artist2","name","date","eventDate","venue","location","city","country","code","tour","sets","set","song","sourceUrl","id","type","status"],"sources":["/Users/jfulbright/bootcamp/Projects/LifeLog/client/src/features/concerts/api/concertApi.js"],"sourcesContent":["const apiKey = process.env.REACT_APP_SETLISTFM_API_KEY;\n\nexport async function fetchSetlists(artist, year) {\n  const url = `https://api.setlist.fm/rest/1.0/search/setlists?artistName=${encodeURIComponent(\n    artist\n  )}&year=${year}`;\n\n  const response = await fetch(url, {\n    headers: {\n      \"x-api-key\": apiKey,\n      Accept: \"application/json\",\n    },\n  });\n\n  if (!response.ok) throw new Error(\"Failed to fetch setlists\");\n  const json = await response.json();\n\n  return (\n    json.setlist?.map((item) => ({\n      artist: item.artist?.name,\n      date: item.eventDate, // will need conversion to ISO\n      venue: item.venue?.name,\n      location: `${item.venue?.city?.name}, ${item.venue?.city?.country?.code}`,\n      tour: item.tour?.name || \"\",\n      setlist: item.sets?.set?.[0]?.song?.map((song) => song.name) || [],\n      sourceUrl: `https://www.setlist.fm/setlist/${item.artist?.name}/${item.id}`,\n      type: \"concert\",\n      status: \"visited\",\n    })) || []\n  );\n}\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B;AAEtD,OAAO,eAAeC,aAAaA,CAACC,MAAM,EAAEC,IAAI,EAAE;EAAA,IAAAC,aAAA;EAChD,MAAMC,GAAG,GAAG,8DAA8DC,kBAAkB,CAC1FJ,MACF,CAAC,SAASC,IAAI,EAAE;EAEhB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAChCI,OAAO,EAAE;MACP,WAAW,EAAEZ,MAAM;MACnBa,MAAM,EAAE;IACV;EACF,CAAC,CAAC;EAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7D,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;EAElC,OACE,EAAAT,aAAA,GAAAS,IAAI,CAACC,OAAO,cAAAV,aAAA,uBAAZA,aAAA,CAAcW,GAAG,CAAEC,IAAI;IAAA,IAAAC,YAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,iBAAA,EAAAC,YAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,cAAA,EAAAC,eAAA,EAAAC,oBAAA,EAAAC,aAAA;IAAA,OAAM;MAC3B3B,MAAM,GAAAe,YAAA,GAAED,IAAI,CAACd,MAAM,cAAAe,YAAA,uBAAXA,YAAA,CAAaa,IAAI;MACzBC,IAAI,EAAEf,IAAI,CAACgB,SAAS;MAAE;MACtBC,KAAK,GAAAf,WAAA,GAAEF,IAAI,CAACiB,KAAK,cAAAf,WAAA,uBAAVA,WAAA,CAAYY,IAAI;MACvBI,QAAQ,EAAE,IAAAf,YAAA,GAAGH,IAAI,CAACiB,KAAK,cAAAd,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYgB,IAAI,cAAAf,iBAAA,uBAAhBA,iBAAA,CAAkBU,IAAI,MAAAT,YAAA,GAAKL,IAAI,CAACiB,KAAK,cAAAZ,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYc,IAAI,cAAAb,iBAAA,wBAAAC,qBAAA,GAAhBD,iBAAA,CAAkBc,OAAO,cAAAb,qBAAA,uBAAzBA,qBAAA,CAA2Bc,IAAI,EAAE;MACzEC,IAAI,EAAE,EAAAd,UAAA,GAAAR,IAAI,CAACsB,IAAI,cAAAd,UAAA,uBAATA,UAAA,CAAWM,IAAI,KAAI,EAAE;MAC3BhB,OAAO,EAAE,EAAAW,UAAA,GAAAT,IAAI,CAACuB,IAAI,cAAAd,UAAA,wBAAAC,cAAA,GAATD,UAAA,CAAWe,GAAG,cAAAd,cAAA,wBAAAC,eAAA,GAAdD,cAAA,CAAiB,CAAC,CAAC,cAAAC,eAAA,wBAAAC,oBAAA,GAAnBD,eAAA,CAAqBc,IAAI,cAAAb,oBAAA,uBAAzBA,oBAAA,CAA2Bb,GAAG,CAAE0B,IAAI,IAAKA,IAAI,CAACX,IAAI,CAAC,KAAI,EAAE;MAClEY,SAAS,EAAE,mCAAAb,aAAA,GAAkCb,IAAI,CAACd,MAAM,cAAA2B,aAAA,uBAAXA,aAAA,CAAaC,IAAI,IAAId,IAAI,CAAC2B,EAAE,EAAE;MAC3EC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC;EAAA,CAAC,CAAC,KAAI,EAAE;AAEb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}